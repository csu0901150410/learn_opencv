

function self.ready() {
    on_dom_load();
}

function on_dom_load() {
    $(#context-menu-gray).subscribe("click", on_gray_click);

    $(#template-window).subscribe("click", on_template_window_click);
}

var sub_toolwindow = null;

function open_window() {
    sub_toolwindow = view.window{
        type: View.TOOL_WINDOW,
        url: self.url("toolwindows/grayscale/grayscale.htm"),
        //x: 100,
        //y: 100,
        width: 286,
        height: 324,
        alignment: 5
    };
}

function on_gray_click() {
    stdout << "on_gray_click\n";

    open_window();
}


// 测试脚本调用C++
@click @on "#btnCallNative" :
{
    var params = {};
    params["text"] = "script call native success ...";
    var ret = view.call_native("script_call_demo", params);

    stdout << String.printf("type of ret: %V\n", typeof ret);
    stdout << String.printf("ret: %V\n", ret);

    $(#textNative).text = ret["ret_text"];
}

function script_function_for_native_call(params) {
    $(#textScript).text = params["text"];
}

// 测试C++调用脚本，先脚本掉C++，再在C++中调用脚本函数 script_function_for_native_call
@click @on "#btnCallScript" :
{
    var params = {};
    var ret = view.call_native("call_script_demo", params);
}

@click @on "#btnPost" :
{
    view.post_request();
}

var template_window = null;

function open_template_window() {
    template_window = view.window{
        type: View.TOOL_WINDOW,
        url: self.url("toolwindows/template/template.htm"),
        width: 300,
        height: 400,
        alignment: 5
    };
}

function on_template_window_click() {
    open_template_window();
}
